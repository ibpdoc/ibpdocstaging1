<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="_Skins_IBP_sidenav" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="../" data-mc-has-content-body="True" data-mc-toc-path="Adding business logic |[%=System.LinkedTitle%]" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="Expires" content="0" />
        <meta http-equiv="Pragma" content="no-cache" />
        <meta http-equiv="Cache-Control" content="no-cache, no-store, must-revalidate" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta name="msapplication-config" content="../Skins/Favicons/browserconfig.xml" />
        <link rel="apple-touch-icon" sizes="180x180" href="../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../Skins/Favicons/favicon-16x16.png" /><title>User-defined third-party widgets</title>
        <!-- Global site tag (gtag.js) - Google Analytics -->
        <link href="../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/Components/Print.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Fluid/Stylesheets/foundation.6.2.3.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Fluid/Stylesheets/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Fluid/Stylesheets/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Fluid/Stylesheets/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Fluid/Stylesheets/Print.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Resources/Stylesheets/Main_Styles.css" rel="stylesheet" type="text/css" />
        <link rel="apple-touch-icon" sizes="180x180" href="../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../Skins/Favicons/favicon-16x16.png" />
        <script src="../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../Resources/Scripts/purify.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../Resources/Scripts/require.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../Resources/Scripts/require.config.js" type="text/javascript" defer="defer">
        </script>
        <script src="../Resources/Scripts/foundation.6.2.3_custom.js" type="text/javascript" defer="defer">
        </script>
        <script src="../Resources/Scripts/plugins.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../Resources/Scripts/MadCapAll.js" type="text/javascript" defer="defer">
        </script>
        <script async="" src="https://www.googletagmanager.com/gtag/js?id=UA-164223934-1">
        </script>
        <script>/* <![CDATA[ */
			window.dataLayer = window.dataLayer || [];
			function gtag(){dataLayer.push(arguments);}
			gtag('js', new Date());

			gtag('config', 'UA-164223934-1');
	/* ]]> */</script>
    </head>
    <body>
        <div class="foundation-wrap off-canvas-wrapper">
            <div class="off-canvas-wrapper-inner" data-off-canvas-wrapper="">
                <aside class="off-canvas position-left" role="navigation" id="offCanvas" data-off-canvas="" data-position="left" data-mc-ignore="true">
                    <ul class="off-canvas-drilldown vertical menu off-canvas-list" data-drilldown="" data-mc-back-link="Back" data-mc-css-tree-node-expanded="is-drilldown-submenu-parent" data-mc-css-tree-node-collapsed="is-drilldown-submenu-parent" data-mc-css-sub-menu="vertical menu slide-in-left is-drilldown-submenu" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="True" data-mc-include-back="True" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.drilldown" data-mc-toc="True">
                    </ul>
                </aside>
                <div class="off-canvas-content inner-wrap" data-off-canvas-content="">
                    <div>
                        <nav class="title-bar tab-bar" role="banner" data-mc-ignore="true"><a class="skip-to-content fluid-skip showOnFocus" href="#">Skip To Main Content</a>
                            <div class="middle title-bar-section outer-row clearfix">
                                <div class="menu-icon-container relative clearfix">
                                    <div class="central-account-wrapper">
                                        <div class="central-dropdown"><a class="central-account-drop"><span class="central-account-image"></span><span class="central-account-text">Account</span></a>
                                            <div class="central-dropdown-content"><a class="MCCentralLink central-dropdown-content-settings">Settings</a>
                                                <hr class="central-separator" /><a class="MCCentralLink central-dropdown-content-logout">Logout</a>
                                            </div>
                                        </div>
                                    </div>
                                    <button class="menu-icon" aria-label="Show Navigation Panel" data-toggle="offCanvas"><span></span>
                                    </button>
                                </div>
                            </div>
                            <div class="title-bar-layout outer-row">
                                <div class="logo-wrapper"><a class="logo" href="../Welcome.htm" alt="Logo"></a>
                                </div>
                                <div class="navigation-wrapper nocontent">
                                    <ul class="navigation clearfix" role="navigation" data-mc-css-tree-node-has-children="has-children" data-mc-css-sub-menu="sub-menu" data-mc-expand-event="mouseenter" data-mc-top-nav-menu="True" data-mc-max-depth="4" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                        <li class="placeholder" style="visibility:hidden"><a>placeholder</a>
                                        </li>
                                    </ul>
                                </div>
                                <div class="central-account-wrapper">
                                    <div class="central-dropdown"><a class="central-account-drop"><span class="central-account-image"></span><span class="central-account-text">Account</span></a>
                                        <div class="central-dropdown-content"><a class="MCCentralLink central-dropdown-content-settings">Settings</a>
                                            <hr class="central-separator" /><a class="MCCentralLink central-dropdown-content-logout">Logout</a>
                                        </div>
                                    </div>
                                </div>
                                <div class="nav-search-wrapper">
                                    <div class="nav-search row">
                                        <form class="search" action="#">
                                            <div class="search-bar search-bar-container needs-pie">
                                                <input class="search-field needs-pie" type="search" aria-label="Search Field" placeholder="Search" />
                                                <div class="search-filter-wrapper"><span class="invisible-label" id="search-filters-label">Filter: </span>
                                                    <div class="search-filter" aria-haspopup="true" aria-controls="sf-content" aria-expanded="false" aria-label="Search Filter" title="All Files" role="button" tabindex="0">
                                                    </div>
                                                    <div class="search-filter-content" id="sf-content">
                                                        <ul>
                                                            <li>
                                                                <button class="mc-dropdown-item" aria-labelledby="search-filters-label filterSelectorLabel-00001"><span id="filterSelectorLabel-00001">All Files</span>
                                                                </button>
                                                            </li>
                                                        </ul>
                                                    </div>
                                                </div>
                                                <div class="search-submit-wrapper" dir="ltr">
                                                    <div class="search-submit" title="Search" role="button" tabindex="0"><span class="invisible-label">Submit Search</span>
                                                    </div>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </nav>
                    </div>
                    <div class="main-section">
                        <div class="row outer-row sidenav-layout">
                            <nav class="sidenav-wrapper">
                                <div class="sidenav-container">
                                    <ul class="off-canvas-accordion vertical menu sidenav" data-accordion-menu="" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu accordion-menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="False" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True" data-mc-side-nav-menu="True">
                                    </ul>
                                </div>
                            </nav>
                            <div class="body-container">
                                <div data-mc-content-body="True">
                                    <div class="sel-dropdown">Documentation Version 
			<select id="versionSelect"><option value="v6.10.0">6.10.0</option><option value="v6.9.0">6.9.0</option><option value="v6.8.0">6.8.0</option><option value="default">6.11.0</option></select><script>/* <![CDATA[ */
				const select = document.querySelector('#versionSelect');
				select.addEventListener('change', function() {
				const selectedVersion = this.value;
				const currentUrl = window.location.href;
				let newUrl = '';

				if (selectedVersion !== "default") {
				if (currentUrl.match(/\/v\d+(\.\d+(\.\d+)?)?\//) === null) {
				const tempURL = new URL(currentUrl);
				newUrl = tempURL.protocol + '//' + tempURL.hostname + '/' + selectedVersion + tempURL.pathname;
				} else {
				newUrl = currentUrl.replace(/\/v\d+(\.\d+(\.\d+)?)?\//, `/${selectedVersion}/`);
				}
				} else {
				// If "default" is selected, remove the versioned part from the URL
				newUrl = currentUrl.replace(/\/v\d+(\.\d+(\.\d+)?)?\//, '/');
				}

				window.location.href = newUrl;
				});
		/* ]]> */</script></div>
                                    <div class="nocontent">
                                        <div class="MCBreadcrumbsBox_0 breadcrumbs" role="navigation" aria-label="Breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="3" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">You are here: </span>
                                        </div>
                                    </div>
                                    <div class="home-container">
                                        <div class="topic-body">
                                            <div role="main" id="mc-main-content">
                                                <h1 id="Userdefinedthirdpartywidgets" data-magellan-target="Userdefinedthirdpartywidgets">User-defined third-party widgets</h1>
                                                <h2 id="Developingathirdpartywidget" data-magellan-target="Developingathirdpartywidget">Developing a third-party widget
        </h2>
                                                <p>In addition to the in-built  React UI widgets, you can now use widgets developed by you to enhance your user experience. Platform enables you to add widgets designed by you to the UI configurator and use them across all the pages in your application.  The high-level steps for developing a third-party widget are as follows:</p>
                                                <ol>
                                                    <li value="1">
                                                        <p>Create a React application.</p>
                                                    </li>
                                                    <li value="2">
                                                        <p>Create a <code>config-overrides.js</code> file with the following content in the root folder. This file is used to generate a single <code>js</code> file while building the project instead of chunks.</p>
                                                        <div class="codeSnippet"><a class="codeSnippetCopyButton" role="button" href="javascript:void(0);">Copy</a>
                                                            <div class="codeSnippetBody" data-mc-continue="False" data-mc-line-number-start="1" data-mc-use-line-numbers="False"><pre><code><span style="color: #0086b3; ">module</span>.exports = {<br />&#160;&#160;webpack: (config, env) =&gt; {<br />&#160;&#160;&#160;&#160;config.optimization.runtimeChunk = <span style="color: #008080; ">false</span>;<br />&#160;&#160;&#160;&#160;config.optimization.splitChunks = {<br />&#160;&#160;&#160;&#160;&#160;&#160;cacheGroups: {<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color: #333333; font-weight: bold; ">default</span>: <span style="color: #008080; ">false</span>,<br />&#160;&#160;&#160;&#160;&#160;&#160;},<br />&#160;&#160;&#160;&#160;};<br />&#160;&#160;&#160;&#160;config.output.filename = <span style="color: #dd1144; ">"static/js/[name].js"</span>;<br />&#160;&#160;&#160;&#160;config.plugins[<span style="color: #008080; ">5</span>].options.filename = <span style="color: #dd1144; ">"static/css/[name].css"</span>;<br />&#160;&#160;&#160;&#160;config.plugins[<span style="color: #008080; ">5</span>].options.moduleFilename = () =&gt; <span style="color: #dd1144; ">"static/css/main.css"</span>;<br />&#160;&#160;&#160;&#160;<span style="color: #333333; font-weight: bold; ">return</span> config;<br />&#160;&#160;},<br />};</code></pre>
                                                            </div>
                                                        </div>
                                                    </li>
                                                    <li value="3">
                                                        <p>Create an <code>src/serviceWorker.js</code> file and add the following content. This file is used to register and unregister a third-party widget.</p>
                                                        <div class="codeSnippet"><a class="codeSnippetCopyButton" role="button" href="javascript:void(0);">Copy</a>
                                                            <div class="codeSnippetBody" data-mc-continue="False" data-mc-line-number-start="1" data-mc-use-line-numbers="False"><pre><code><span style="color: #333333; font-weight: bold; ">const</span> isLocalhost = <span style="color: #0086b3; ">Boolean</span>(<br />&#160;&#160;&#160;&#160;<span style="color: #0086b3; ">window</span>.location.hostname === <span style="color: #dd1144; ">'localhost'</span> ||<br />&#160;&#160;&#160;&#160;<span style="color: #0086b3; ">window</span>.location.hostname === <span style="color: #dd1144; ">'[::1]'</span> ||<br />&#160;&#160;&#160;&#160;<span style="color: #0086b3; ">window</span>.location.hostname.match(<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/^<span style="color: #008080; ">127</span>(?:\.(?:<span style="color: #008080; ">25</span>[<span style="color: #008080; ">0-5</span>]|<span style="color: #008080; ">2</span>[<span style="color: #008080; ">0-4</span>][<span style="color: #008080; ">0-9</span>]|[<span style="color: #008080; ">01</span>]?[<span style="color: #008080; ">0-9</span>][<span style="color: #008080; ">0-9</span>]?)){<span style="color: #008080; ">3</span>}$/<br />&#160;&#160;&#160;&#160;)<br />);<br /><br /><span style="color: #333333; font-weight: bold; ">export</span> <span style="color: #333333; font-weight: bold; ">function</span> <span style="color: #990000; font-weight: bold; ">register</span>(config) {<br />&#160;&#160;&#160;&#160;<span style="color: #333333; font-weight: bold; ">if</span> (process.env.NODE_ENV === <span style="color: #dd1144; ">'production'</span> &amp;&amp; <span style="color: #dd1144; ">'serviceWorker'</span> <span style="color: #333333; font-weight: bold; ">in</span> navigator) {<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color: #333333; font-weight: bold; ">const</span> publicUrl = <span style="color: #333333; font-weight: bold; ">new</span> URL(process.env.PUBLIC_URL, <span style="color: #0086b3; ">window</span>.location.href);<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color: #333333; font-weight: bold; ">if</span> (publicUrl.origin !== <span style="color: #0086b3; ">window</span>.location.origin) {<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color: #333333; font-weight: bold; ">return</span>;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}<br /><br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color: #0086b3; ">window</span>.addEventListener(<span style="color: #dd1144; ">'load'</span>, () =&gt; {<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color: #333333; font-weight: bold; ">const</span> swUrl = <span style="color: #dd1144; ">`<span style="color: #333333; font-weight: bold; ">${process.env.PUBLIC_URL}</span>/service-worker.js`</span>;<br /><br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color: #333333; font-weight: bold; ">if</span> (isLocalhost) {<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;checkValidServiceWorker(swUrl, config);<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;navigator.serviceWorker.ready.then(() =&gt; {<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color: #0086b3; ">console</span>.log(<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color: #dd1144; ">'This web app is being served cache-first by a service '</span><br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;);<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;});<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;} <span style="color: #333333; font-weight: bold; ">else</span> {<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;registerValidSW(swUrl, config);<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;});<br />&#160;&#160;&#160;&#160;}<br />}<br /><br /><span style="color: #333333; font-weight: bold; ">function</span> <span style="color: #990000; font-weight: bold; ">registerValidSW</span>(swUrl, config) {<br />&#160;&#160;&#160;&#160;navigator.serviceWorker<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.register(swUrl)<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.then(registration =&gt; {<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;registration.onupdatefound = () =&gt; {<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color: #333333; font-weight: bold; ">const</span> installingWorker = registration.installing;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color: #333333; font-weight: bold; ">if</span> (installingWorker == <span style="color: #008080; ">null</span>) {<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color: #333333; font-weight: bold; ">return</span>;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;installingWorker.onstatechange = () =&gt; {<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color: #333333; font-weight: bold; ">if</span> (installingWorker.state === <span style="color: #dd1144; ">'installed'</span>) {<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color: #333333; font-weight: bold; ">if</span> (navigator.serviceWorker.controller) {<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color: #0086b3; ">console</span>.log(<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color: #dd1144; ">'New content is available and will be used when all '</span><br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;);<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color: #333333; font-weight: bold; ">if</span> (config &amp;&amp; config.onUpdate) {<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;config.onUpdate(registration);<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;} <span style="color: #333333; font-weight: bold; ">else</span> {<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color: #0086b3; ">console</span>.log(<span style="color: #dd1144; ">'Content is cached for offline use.'</span>);<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color: #333333; font-weight: bold; ">if</span> (config &amp;&amp; config.onSuccess) {<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;config.onSuccess(registration);<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;};<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;};<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;})<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.catch(error =&gt; {<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color: #0086b3; ">console</span>.error(<span style="color: #dd1144; ">'Error during service worker registration:'</span>, error);<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;});<br />}<br /><br /><span style="color: #333333; font-weight: bold; ">function</span> <span style="color: #990000; font-weight: bold; ">checkValidServiceWorker</span>(swUrl, config) {<br />&#160;&#160;&#160;&#160;fetch(swUrl, {<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;headers: {<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color: #dd1144; ">'Service-Worker'</span>: <span style="color: #dd1144; ">'script'</span><br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;},<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;})<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.then(response =&gt; {<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color: #333333; font-weight: bold; ">const</span> contentType = response.headers.get(<span style="color: #dd1144; ">'content-type'</span>);<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color: #333333; font-weight: bold; ">if</span> (<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;response.status === <span style="color: #008080; ">404</span> ||<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(contentType != <span style="color: #008080; ">null</span> &amp;&amp; contentType.indexOf(<span style="color: #dd1144; ">'javascript'</span>) === <span style="color: #008080; ">-1</span>)<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;) {<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;navigator.serviceWorker.ready.then(registration =&gt; {<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;registration.unregister().then(() =&gt; {<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color: #0086b3; ">window</span>.location.reload();<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;});<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;});<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;} <span style="color: #333333; font-weight: bold; ">else</span> {<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;registerValidSW(swUrl, config);<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;})<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.catch(() =&gt; {<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color: #0086b3; ">console</span>.log(<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color: #dd1144; ">'No internet connection found. App is running in offline mode.'</span><br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;);<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;});<br />}<br /><br /><span style="color: #333333; font-weight: bold; ">export</span> <span style="color: #333333; font-weight: bold; ">function</span> <span style="color: #990000; font-weight: bold; ">unregister</span>() {<br />&#160;&#160;&#160;&#160;<span style="color: #333333; font-weight: bold; ">if</span> (<span style="color: #dd1144; ">'serviceWorker'</span> <span style="color: #333333; font-weight: bold; ">in</span> navigator) {<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;navigator.serviceWorker.ready<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.then(registration =&gt; {<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;registration.unregister();<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;})<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.catch(error =&gt; {<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style="color: #0086b3; ">console</span>.error(error.message);<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;});<br />&#160;&#160;&#160;&#160;}<br />}</code></pre>
                                                            </div>
                                                        </div>
                                                        <p>&#160;</p>
                                                    </li>
                                                    <li value="4">
                                                        <p>Modify <code>index.js</code> and add the following content. Replace {id} with the widget ID. For example, <code>window.renderMyApp</code>.</p>
                                                        <div class="codeSnippet"><a class="codeSnippetCopyButton" role="button" href="javascript:void(0);">Copy</a>
                                                            <div class="codeSnippetBody" data-mc-continue="False" data-mc-line-number-start="1" data-mc-use-line-numbers="False"><pre><code><span style="color: #333333; font-weight: bold; ">import</span> React <span style="color: #333333; font-weight: bold; ">from</span> <span style="color: #dd1144; ">'react'</span>;<br /><span style="color: #333333; font-weight: bold; ">import</span> ReactDOM <span style="color: #333333; font-weight: bold; ">from</span> <span style="color: #dd1144; ">'react-dom'</span>;<br /><span style="color: #333333; font-weight: bold; ">import</span> <span style="color: #dd1144; ">'./index.css'</span>;<br /><span style="color: #333333; font-weight: bold; ">import</span> App <span style="color: #333333; font-weight: bold; ">from</span> <span style="color: #dd1144; ">'./App'</span>;<br /><span style="color: #333333; font-weight: bold; ">import</span> * <span style="color: #333333; font-weight: bold; ">as</span> serviceWorker <span style="color: #333333; font-weight: bold; ">from</span> <span style="color: #dd1144; ">'./serviceWorker'</span>;<br /><br /><span style="color: #0086b3; ">window</span>.render{id} = (containerId, data, uiSchema) =&gt; {<br />&#160;&#160;ReactDOM.render(<br />&#160;&#160;&#160;&#160;&lt;App data={data} uiSchema={uiSchema}/&gt;,<br />&#160;&#160;&#160;&#160;<span style="color: #0086b3; ">document</span>.getElementById(containerId),<br />&#160;&#160;);<br />&#160;&#160;serviceWorker.unregister();<br />};<br /><br /><span style="color: #0086b3; ">window</span>.unmount{id} = containerId =&gt; {<br />&#160;&#160;ReactDOM.unmountComponentAtNode(<span style="color: #0086b3; ">document</span>.getElementById(containerId));<br />};</code></pre>
                                                            </div>
                                                        </div>
                                                    </li>
                                                    <li value="5">
                                                        <p>Run the command <code>npm install --save react-app-rewired</code> in your workspace terminal to install react-app-rewired.</p>
                                                    </li>
                                                    <li value="6">
                                                        <p>Modify <code>package.json</code> to build into a single file.</p>
                                                        <div class="codeSnippet"><a class="codeSnippetCopyButton" role="button" href="javascript:void(0);">Copy</a>
                                                            <div class="codeSnippetBody" data-mc-continue="False" data-mc-line-number-start="1" data-mc-use-line-numbers="False"><pre><code>&#160;&#160;<span style="color: #dd1144; ">"scripts"</span>: {<br />&#160;&#160;&#160;&#160;<span style="color: #dd1144; ">"start"</span>: <span style="color: #dd1144; ">"react-app-rewired start"</span>,<br />&#160;&#160;&#160;&#160;<span style="color: #dd1144; ">"build"</span>: <span style="color: #dd1144; ">"react-app-rewired build"</span>,<br />&#160;&#160;&#160;&#160;<span style="color: #dd1144; ">"test"</span>: <span style="color: #dd1144; ">"react-scripts test"</span>,<br />&#160;&#160;&#160;&#160;<span style="color: #dd1144; ">"eject"</span>: <span style="color: #dd1144; ">"react-scripts eject"</span><br />&#160;&#160;}</code></pre>
                                                            </div>
                                                        </div>
                                                    </li>
                                                    <li value="7">
                                                        <p>Run the command <code>npm run-script build</code> to build the application.</p>
                                                        <div class="note"><b>Note</b>: Running the above command auto-generates a build folder. Go to <code>&lt;root folder&gt;/build/manifest.json</code>, and ensure that the contents in this file are in the <code>files </code>node, as shown in the screenshot below.</div>
                                                        <p>
                                                            <img src="../img/User-Defined-_format.png" style="width: 459px;height: 208px;" alt="" />
                                                        </p>
                                                    </li>
                                                </ol>
                                                <h2 id="AddingathirdpartywidgettothePlatform" data-magellan-target="AddingathirdpartywidgettothePlatform">Adding a third-party widget to the Platform
        </h2>
                                                <p>You can add a widget designed by you to the UI configurator alongside the in-built React UI widgets, so that it is readily available to use whenever needed.</p>
                                                <p>The procedure to add a widget is as follows:</p>
                                                <ol>
                                                    <li value="1">
                                                        <p>On the <b>System</b> tab, click <b>+Widget</b> on the <b>Widgets</b> subtab.</p>
                                                        <p>
                                                            <img src="../img/Third_Party_Widget_1.png" style="width: 545px;height: 180px;" alt="" />
                                                        </p>
                                                    </li>
                                                    <li value="2">
                                                        <p>On the <b>Widget Indexes</b> tab of the <b>Add Widget</b> dialog box, add details such as the widget ID, name, description, thumbnail, and image. Click <b>Next</b>.</p>
                                                        <p>
                                                            <img src="../img/Third_Party_Widget_2.png" style="width: 437px;height: 372px;" alt="" />
                                                        </p>
                                                        <div class="note"><b>Note</b>:Every widget has a unique <b>ID</b>. The <b>Name</b> and <b>Description</b> you provide here is displayed in the UI. The <b>Thumbnail</b> is a smaller graphical representation of the <b>Image</b>.</div>
                                                    </li>
                                                    <li value="3">
                                                        <p>Add required fields on the <b>Widget Schema</b> tab by clicking the <b>+</b> button and filling in details such as the field name, key, and type. For example, in the case of Quarterly Revenue Growth, we would need 2 fields primarily to measure the change in sales from one quarter to another – Revenue and Quarter.  In the case of student marks, we would need fields such as Student Name, Marks, Subject, etc. </p>
                                                        <div class="note"><b>Note</b>:Platform currently supports the field types, String and Number.</div>
                                                        <p>Similarly, UI properties can also be added to change the appearance and presentability of the widget. These include the widget title, color, etc. </p>
                                                        <div class="note"><b>Note</b>:UI properties can be of 2 types - String and Color.</div>
                                                        <p> Click the <b>–</b> button to remove a field/ UI property. Sample JSON data is used for rendering the widget in the <b>Design</b> tab of the UI Configurator. Click <b>Next</b> after filling in all 3 sections of the <b>Widget Schema</b> tab.</p>
                                                        <p>
                                                            <img src="../img/Third_Party_Widget_3.png" style="width: 429px;height: 401px;" alt="" />
                                                        </p>
                                                    </li>
                                                    <li value="4">
                                                        <p>On the <b>Widget Build</b> tab, upload the node js application build folder contents as a ZIP file to the Platform, and click <b>Submit</b> .</p>
                                                        <div class="note"><b>Note</b>:Instead of zipping the build folder directly, the contents of the build folder must be added to a ZIP file. This is so that when the ZIP file is extracted, its contents get extracted directly.</div>
                                                        <p>
                                                            <img src="../img/Third_Party_Widget_4.png" style="width: 195px;height: 213px;" alt="" />
                                                        </p>
                                                        <p>
                                                            <img src="../img/Third_Party_Widget_5.png" style="width: 483px;height: 223px;" alt="" />
                                                        </p>
                                                    </li>
                                                    <li value="5">
                                                        <p>Enjoy using your widget from the UI Configurator! For more information, see <a href="UI_Configurator.htm">UI Configurator</a>.</p>
                                                    </li>
                                                </ol>
                                                <h2 id="Editingathirdpartywidget" data-magellan-target="Editingathirdpartywidget">Editing a third-party widget
        </h2>
                                                <p>Platform enables you to edit a third-party widget in case you wish to make changes to it after adding it. To edit a third-party widget:</p>
                                                <ol>
                                                    <li value="1">
                                                        <p>Click <b>Edit</b> next to the widget that you want to edit on the <b>Widgets</b> subtab of the <b>System</b> tab.</p>
                                                        <p>
                                                            <img src="../img/Third_Party_Widget_6.png" style="width: 559px;height: 186px;" alt="" />
                                                        </p>
                                                    </li>
                                                    <li value="2">
                                                        <p>The <b>Edit Widget Data</b> dialog box opens. Select the required tab, and edit the necessary details. Click <b>Submit</b> on the <b>Widget Build</b> tab to save these changes.</p>
                                                        <p>
                                                            <img src="../img/Third_Party_Widget_7.png" style="width: 450px;height: 373px;" alt="" />
                                                        </p>
                                                    </li>
                                                </ol>
                                                <h2 id="Deletingthirdpartywidgets" data-magellan-target="Deletingthirdpartywidgets">Deleting third-party widgets
        </h2>
                                                <p>You can delete a third-party widget if you no longer wish to use it. To delete a third-party widget:</p>
                                                <ol>
                                                    <li value="1">
                                                        <p>Click <b>Delete</b> next to the widget you want to delete on the <b>Widgets</b> subtab of the <b>System</b> tab.</p>
                                                        <p>
                                                            <img src="../img/Third_Party_Widget_8.png" style="width: 562px;height: 187px;" alt="" />
                                                        </p>
                                                    </li>
                                                    <li value="2">
                                                        <p>The <b>Delete Widget?</b> dialog box opens. Select the <b>Yes, I want to complete this action</b> checkbox and click <b>Continue</b> to permanently delete the widget.</p>
                                                        <p>
                                                            <img src="../img/Third_Party_Widget_9.png" style="width: 364px;height: 248px;" alt="" />
                                                        </p>
                                                        <p>A pop-up message notifying that the widget has been successfully deleted appears to confirm the deletion.</p>
                                                    </li>
                                                </ol>
                                            </div>
                                        </div>
                                        <div class="menu-container">
                                            <div data-sticky-container="" id="TyqwQuGRpkeJMBUFcCGAww">
                                                <div class="sticky sticky-menu" style="width:100%" data-sticky="" data-top-anchor="TyqwQuGRpkeJMBUFcCGAww:top" data-bottom-anchor="contentBody:bottom" data-scroll-container=".body-container" data-sticky-on="small" data-scroll-container-on="only screen and (min-width: 1280px)">
                                                    <ul data-magellan="" data-animation-duration="250" data-active-class="selected" data-scroll-container=".body-container" data-scroll-container-on="only screen and (min-width: 1280px)" class="nocontent menu _Skins_topic_menu mc-component">
                                                        <li class="tree-node"><a href="#Userdefinedthirdpartywidgets">User-defined third-party widgets</a>
                                                        </li>
                                                        <li>
                                                            <ul>
                                                                <li class="tree-node"><a href="#Developingathirdpartywidget">Developing a third-party widget
        </a>
                                                                </li>
                                                                <li class="tree-node"><a href="#AddingathirdpartywidgettothePlatform">Adding a third-party widget to the Platform
        </a>
                                                                </li>
                                                                <li class="tree-node"><a href="#Editingathirdpartywidget">Editing a third-party widget
        </a>
                                                                </li>
                                                                <li class="tree-node"><a href="#Deletingthirdpartywidgets">Deleting third-party widgets
        </a>
                                                                </li>
                                                            </ul>
                                                        </li>
                                                    </ul>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="panel">
                                        <div class="right-align"><a class="footer1" href="https://www.linkedin.com/company/infiniteblue/" target="_blank"><img src="../Resources/Images/Home/linkedin.png" alt="Linkedin" style="width: 35px;height: 35px;" /></a><a class="footer1last" href="https://www.youtube.com/channel/UCRa_FE0f3k9KJrNJyAT39Hg/featured" target="_blank"><img src="../Resources/Images/Home/youtube.png" alt="YouTube" style="width: 35px;height: 35px;" /></a>
                                        </div>
                                        <div class="right-align-2"><a class="footer2" href="https://www.infiniteblue.com" target="_blank">Copyright © 2024 Infinite Blue. All Rights Reserved.</a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div><a data-close="true"></a>
                </div>
            </div>
        </div>
    </body>
</html>